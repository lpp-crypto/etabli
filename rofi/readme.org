#+TITLE: ZSH Scripts Providing a dmenu-like Interface



This [[https://orgmode.org/][orgmode]] file is both the documentation and the original source code for the scripts in this folder. They use the =etabli.py= script in combination with some basic =zsh= scripting to interact with the dmenu-like launcher of your choice, e.g. [[https://github.com/davatorium/rofi][rofi]], and use it to provide a convenient interface to deal with workspaces and levels.

Similar results could be achieved using =jq= to for instance parse the output of =swaymsg -t get_workspaces= (in fact, this is how these scripts started), but I preferred to get rid of the dependence on =jq= and instead have =etabli.py= handle such interaction, the aim being to allow abritrarily complex processing down the line.

* Building the ZSH Scripts
** Setting up the launcher


#+NAME: dmenu-command
#+BEGIN_SRC sh
rofi -dmenu -i  -config ~/.config/rofi/rofi.rasi -p 
#+END_SRC


#+NAME: dmenu
#+BEGIN_SRC sh
~/.cargo/bin/kickoff --from-stdin --stdout -p
#+END_SRC
** Renaming
We need to grab the name of the current workspace (I use the method given [[https://gist.github.com/Sprit3Dan/bb730c9405d4632cc90a1d36b5400207][here]]), the name to give (using the launcher), and then the right message via =swaymsg=.


#+BEGIN_SRC sh :tangle ./rofi-workspace-rename :results output silent :noweb yes
#!/usr/bin/zsh

OLD_NAME=$(python3 ~/etabli/etabli.py current_workspace)
LEVEL=$(python3 ~/etabli/etabli.py current_level)
NEW_NAME=$(<<dmenu-command>> "Enter new name (old was \`$OLD_NAME\`)" -filter $LEVEL/ -l 0)
if [[ $NEW_NAME ]]; then
    swaymsg rename workspace $OLD_NAME to $NEW_NAME
else
    echo "not doing anything"
fi
#+END_SRC
** Switching
We grab the name of all the workspaces by parsing the output of =swaymsg -t get_workspaces= using =jq=, and then use =rofi= to select one.

#+BEGIN_SRC sh :tangle ./rofi-workspace-switch :results output silent :noweb yes
#!/usr/bin/zsh

WORKSPACES=$(python3 ~/etabli/etabli.py get_workspaces)
echo $WORKSPACES
SELECTED_WORKSPACE=$(echo $WORKSPACES | <<dmenu-command>> "Go to workspace")
if [[ $SELECTED_WORKSPACE ]]; then
    swaymsg workspace "$SELECTED_WORKSPACE"
else
    echo "not doing anything"

fi
#+END_SRC
** Sending container
Basically identical to the [[*Switching][previous script]], but this one sends the
focused window there.

After sending the container, we "follow" it by also switching the
workspace.
#+BEGIN_SRC sh :tangle ./rofi-workspace-send :results output silent :noweb yes
#!/usr/bin/zsh

WORKSPACES=$(python3 ~/etabli/etabli.py get_workspaces)
echo $WORKSPACES
SELECTED_WORKSPACE=$(echo $WORKSPACES | <<dmenu-command>> "Send window to workspace")
if [[ $SELECTED_WORKSPACE ]]; then
    swaymsg move container to workspace "$SELECTED_WORKSPACE"
    swaymsg workspace "$SELECTED_WORKSPACE"
else
    echo "not doing anything"
fi
#+END_SRC

* Usage
To use these scripts, simply add something like the following snippet to your =sway= configuration, where =path/to/rofi_folder/= needs to be replaced by the actual path to this folder.

#+BEGIN_SRC
bindsym $mod+n exec zsh path/to/rofi_folder/rofi-workspace-rename
bindsym $mod+b exec zsh path/to/rofi_folder/rofi-workspace-switch
bindsym $mod+Shift+b exec zsh path/to/rofi_folder/rofi-workspace-send
#+END_SRC

With these settings, pressing =mod+n= will create a rofi prompt to choose which workspace to switch to. 
